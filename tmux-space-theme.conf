######### DISPLAY ##########
set -g renumber-windows on    # renumber windows when a window is closed

## COLORSCHEME: gruvbox dark

set -g mode-style fg=colour235,bg=colour246
set-option -g status "on"

# default statusbar color
set-option -g status-style bg=colour237,fg=colour223

# default window title colors
set-window-option -g window-status-style bg=colour214,fg=colour237

# default window with an activity alert
set-window-option -g window-status-activity-style bg=colour237,fg=colour248

# active window title colors
set-window-option -g window-status-current-style bg=red,fg=colour237

# pane border
set-option -g pane-active-border-style fg=colour109
set-option -g pane-border-style fg=colour237

# message infos
set-option -g message-style bg=colour239,fg=colour223

# writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223

# pane number display
set-option -g display-panes-active-colour colour250
set-option -g display-panes-colour colour237

# clock
set-window-option -g clock-mode-colour colour109

# bell
set-window-option -g window-status-bell-style bg=colour167,fg=colour235

## Helpers
#### https://github.com/soyuka/tmux-current-pane-hostname/blob/master/scripts/shared.sh
get_tmux_option() {
    local option=$1
    local default_value=$2
    local option_value=$(tmux show-option -gqv "$option")
    if [ -z "$option_value" ]; then
            echo "$default_value"
    else
            echo "$option_value"
    fi
}

set_tmux_option() {
    local option=$1
    local value=$2
    tmux set-option -gq "$option" "$value"
}

parse_ssh_port() {
  # If there is a port get it
  local port=$(echo $1|grep -Eo '\-p\s*([0-9]+)'|sed 's/-p\s*//')

  if [ -z $port ]; then
    local port=22
  fi

  echo $port
}

get_ssh_user() {
  local ssh_user=$(whoami)

  for ssh_config in `awk '
    $1 == "Host" {
      gsub("\\\\.", "\\\\.", $2);
      gsub("\\\\*", ".*", $2);
      host = $2;
      next;
    }
    $1 == "User" {
      $1 = "";
      sub( /^[[:space:]]*/, "" );
      printf "%s|%s\n", host, $0;
    }' .ssh/config`; do
    local host_regex=${ssh_config%|*}
    local host_user=${ssh_config#*|}
    if [[ "$1" =~ $host_regex ]]; then
      ssh_user=$host_user
      break
    fi
  done

  echo $ssh_user
}

get_remote_info() {
  local command=$1

  # First get the current pane command pid to get the full command with arguments
  local cmd=$({ pgrep -flaP `tmux display-message -p "#{pane_pid}"` ; ps -o command -p `tmux display-message -p "#{pane_pid}"` ; } | xargs -I{} echo {} | grep ssh | sed -E 's/^[0-9]*[[:blank:]]*ssh //')

  local port=$(parse_ssh_port "$cmd")

  local cmd=$(echo $cmd|sed 's/\-p\s*'"$port"'//g')
  local user=$(echo $cmd | awk '{print $NF}'|cut -f1 -d@)
  local host=$(echo $cmd | awk '{print $NF}'|cut -f2 -d@)

  if [ $user == $host ]; then
    local user=$(get_ssh_user $host)
  fi

  case "$1" in
    "whoami")
      echo $user
      ;;
    "hostname")
      echo $host
      ;;
    "port")
      echo $port
      ;;
    *)
      echo "$user@$host:$port"
      ;;
  esac
}

get_info() {
  # If command is ssh do some magic
  if ssh_connected; then
    echo $(get_remote_info $1)
  else
    echo $($1)
  fi
}

ssh_connected() {
  # Get current pane command
  local cmd=$(tmux display-message -p "#{pane_current_command}")

  [ $cmd = "ssh" ] || [ $cmd = "sshpass" ]
}

## Theme settings mixed with colors (unfortunately, but there is no cleaner way)
set-option -g status-justify "left"
set-option -g status-left-style none
set-option -g status-left-length "80"
set-option -g status-right-style none
set-option -g status-right-length "80"
set-window-option -g window-status-separator ""

set-option -g status-left "#[fg=colour214, bg=colour237,bold] #I "

set-option -g status-right "#[fg=colour239, bg=colour237,nobold]#[fg=colour246, bg=colour239] #(get_info hostname) #[fg=colour246, bg=colour239]#[fg=colour235, bg=colour246] %H:%M "

home="#(if [[ $HOME == #{pane_current_path} ]]; then echo \"~\" ; else echo #{b:pane_current_path}; fi)"

path="#($(tmux showw -v @show-full-window-path) == true && echo \"$(echo #{pane_current_path} | awk '{print \"~\"$1}' | cut -d/ -f-1,4-)\" || echo \"$home\")"

set-window-option -g window-status-current-format "#[fg=colour237, bg=colour246, ]#[fg=colour235, bg=colour246] $path #[fg=colour246, bg=colour237]"

set-window-option -g window-status-format "#[fg=colour237,bg=colour239]#[fg=colour246, bg=colour239] $path #[fg=colour239, bg=colour237]"

